# Pulsara IVR v2 - Product Requirements Document (PRD)

## 1. Introduction

### 1.1 Overview
Pulsara IVR v2 is an **AI-powered phone system for restaurants** that ensures **no missed calls**, provides **basic automated responses**, and **forwards calls dynamically** to restaurant staff when needed. Unlike traditional IVR systems, Pulsara is designed to be **scalable across multiple restaurants** while maintaining a **simple and efficient** workflow.

### 1.2 Business Goals
The primary goal of IVR v2 is to create a **scalable**, **configurable**, and **future-proof** AI phone system for restaurants. It must:
- **Eliminate missed calls** by ensuring that every call is handled.
- **Reduce staff workload** by answering simple questions automatically.
- **Seamlessly forward calls** when necessary without requiring manual intervention.
- **Support multiple restaurants dynamically**, without hardcoded values.
- **Allow for future expansion** into analytics, self-serve portals, and email notifications.

---

## 2. Key Product Features

### 2.1 Core Features in IVR v2
‚úÖ **Automated Call Handling** ‚Üí Uses **Twilio** to receive and process calls.  
‚úÖ **Dynamic Restaurant Identification** ‚Üí Calls are matched to the correct restaurant **using a database lookup**.  
‚úÖ **Call Forwarding to Restaurant** ‚Üí Calls are **automatically forwarded** to the restaurant's phone when human assistance is needed.  
‚úÖ **Call Logging for Future Analytics** ‚Üí Basic call logs are stored for **insights and reporting**.  
‚úÖ **Future-Proof API Architecture** ‚Üí The system is built with **scalability in mind**, allowing for new features like **email alerts, analytics, and self-serve restaurant portals**.

---

## 3. User Stories

### **3.1 As a Restaurant Owner**
- I want **every call to be answered** so I don‚Äôt lose customers.
- I want **routine questions (e.g., hours, location) handled automatically**.
- I want **calls seamlessly forwarded to my restaurant** when needed.
- I want **insights on call volume** so I can track customer engagement.
- I want **to keep my existing phone number** without disruption.

### **3.2 As a Customer Calling a Restaurant**
- I want **an immediate, professional response** when I call.
- I want **to quickly get answers to basic questions** (hours, location).
- I want **to be transferred to a human if needed**.
- I want **clear, natural-sounding AI responses**.

---

## 4. System Workflow

### **4.1 Call Handling Flow**
1. **Customer calls the restaurant‚Äôs existing phone number.**
2. **Twilio forwards the call to Pulsara IVR.**
3. **Pulsara API identifies the restaurant dynamically.**
4. **AI determines if the call should be handled or forwarded.**
5. **If necessary, the call is forwarded to the restaurant‚Äôs main phone number.**
6. **Call details are logged for future analytics.**
   +--------------+       +-------------+       +------------+
   |   Twilio     | ----> |  Pulsara API | ----> |  Database  |
   +--------------+       +-------------+       +------------+
          |                     |
          |                     |
          |                     V
          |              +------------------+
          |              |  ElevenLabs AI   |
          |              +------------------+
          |                     |
          |                     V
          |              +------------------+
          |              |   Call Logging   |
          |              +------------------+
          ---

## 5. Technical Considerations

### **5.1 API Design**
IVR v2 will operate with a **single API** that supports **multiple restaurants dynamically**. 

#### **5.1.1 API Endpoints**
- **`/twilio/inbound_call`** ‚Üí Receives calls and identifies the restaurant.
- **`/api/tools/forward_call`** ‚Üí Forwards calls to the restaurant.
- **`/api/logs/store_call`** ‚Üí Stores call details for analytics.

#### **5.1.2 Database Schema**
Stores **restaurant settings, phone numbers, and call logs**.
```json
{
  "restaurant_id": "d34db33f",
  "name": "Pulsara Restaurant",
  "twilio_number": "+15550001111",
  "forwarding_number": "+15557654321",
  "email": "owner@example.com",
  "business_hours": {
    "monday": "10:00 AM - 9:00 PM",
    "tuesday": "10:00 AM - 9:00 PM"
  }
}
6. Future Expansion Areas

While IVR v2 focuses on scalability and reliability, the system is designed to support future enhancements:

6.1 Email Notifications (Future)
	‚Ä¢	Send real-time email alerts to restaurant owners for every call.
	‚Ä¢	Include call duration, caller number, and AI interaction details.

6.2 Analytics Dashboard (Future)
	‚Ä¢	Provide insights on call volume, missed calls, and forwarded calls.
	‚Ä¢	Help restaurant owners optimize customer service.

6.3 Self-Serve Restaurant Portal (Future)
	‚Ä¢	Allow restaurant owners to manage their own call settings.
	‚Ä¢	Let owners update menus, forwarding numbers, and hours.

‚∏ª

7. Deployment Strategy

7.1 Infrastructure
	‚Ä¢	Backend: FastAPI (Python) hosted on AWS/GCP.
	‚Ä¢	Database: PostgreSQL or Firebase for scalability.
	‚Ä¢	Logging & Monitoring: CloudWatch/Prometheus for API health tracking.

7.2 Deployment Pipeline
	‚Ä¢	Staging Environment for testing before release.
	‚Ä¢	CI/CD Pipeline for automated API updates.
	‚Ä¢	Failover Mechanisms for uninterrupted Twilio call handling.

‚∏ª

8. Summary & Next Steps

8.1 Why IVR v2?

‚úÖ Scalable across multiple restaurants (no hardcoded values).
‚úÖ Simple but effective call handling (AI + forwarding).
‚úÖ Lays the foundation for analytics and email notifications.

8.2 Immediate Next Steps

1Ô∏è‚É£ Set up the database schema for multi-restaurant support.
2Ô∏è‚É£ Modify Twilio webhook logic to pull restaurant settings dynamically.
3Ô∏è‚É£ Implement basic call forwarding & logging.
4Ô∏è‚É£ Test failover scenarios to ensure call reliability.

‚∏ª

üî• This PRD keeps IVR v2 focused, scalable, and ready for future growth. üöÄ
Let me know if you want any modifications!